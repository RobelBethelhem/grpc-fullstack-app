#!/bin/bash

set -e  # Exit on any error

echo "=== gRPC Code Generation Script ==="
echo "This script generates PHP gRPC files from proto definitions"
echo

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if protoc is installed
if ! command -v protoc &> /dev/null; then
    echo -e "${RED}ERROR: protoc compiler not found${NC}"
    echo "Please install protobuf compiler:"
    echo "  Ubuntu/Debian: sudo apt-get install protobuf-compiler"
    echo "  macOS: brew install protobuf"
    exit 1
fi

# Check and install protoc-gen-php-grpc if not present
if ! command -v protoc-gen-php-grpc &> /dev/null; then
    echo -e "${YELLOW}Installing protoc-gen-php-grpc...${NC}"
    
    # Download the specific version for PHP 7.3 compatibility
    wget https://github.com/spiral/php-grpc/releases/download/v1.4.0/protoc-gen-php-grpc-1.4.0-linux-amd64.tar.gz
    
    if [ $? -ne 0 ]; then
        echo -e "${RED}ERROR: Failed to download protoc-gen-php-grpc${NC}"
        exit 1
    fi
    
    tar -xzf protoc-gen-php-grpc-1.4.0-linux-amd64.tar.gz
    sudo mv protoc-gen-php-grpc /usr/local/bin/protoc-gen-php-grpc
    sudo chmod +x /usr/local/bin/protoc-gen-php-grpc
    
    # Clean up
    rm -f protoc-gen-php-grpc-1.4.0-linux-amd64.tar.gz
    
    echo -e "${GREEN}‚úì protoc-gen-php-grpc installed successfully${NC}"
else
    echo -e "${GREEN}‚úì protoc-gen-php-grpc already installed${NC}"
fi

# Create output directory
echo -e "${YELLOW}Creating output directory...${NC}"
mkdir -p src/Generated

# Generate PHP files from proto
echo -e "${YELLOW}Generating gRPC files from proto/ping.proto...${NC}"

protoc --proto_path=proto \
       --php_out=src/Generated \
       --php-grpc_out=src/Generated \
       proto/ping.proto

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úì gRPC files generated successfully!${NC}"
    echo
    echo "Generated files:"
    echo "  üìÅ src/Generated/"
    
    # List all generated files
    find src/Generated -name "*.php" | while read file; do
        echo "    üìÑ $file"
    done
    
    echo
    echo -e "${GREEN}The following files were generated by protoc:${NC}"
    echo "  ‚Ä¢ GPBMetadata/Ping.php       - Protocol buffer metadata"
    echo "  ‚Ä¢ Ping/PingRequest.php       - Request message class"  
    echo "  ‚Ä¢ Ping/PingResponse.php      - Response message class"
    echo "  ‚Ä¢ Ping/PingServiceInterface.php - Service interface"
    echo
    echo -e "${YELLOW}NOTE:${NC} These files are generated automatically by protoc,"
    echo "but the require_once statements in server.php are written manually."
    echo "You can also use composer's autoloading instead of manual requires."
    
else
    echo -e "${RED}ERROR: Failed to generate gRPC files${NC}"
    echo "Check that proto/ping.proto exists and is valid"
    exit 1
fi

# Verify generated files exist
echo -e "${YELLOW}Verifying generated files...${NC}"

required_files=(
    "src/Generated/GPBMetadata/Ping.php"
    "src/Generated/Ping/PingRequest.php"
    "src/Generated/Ping/PingResponse.php" 
    "src/Generated/Ping/PingServiceInterface.php"
)

all_present=true
for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úì${NC} $file"
    else
        echo -e "${RED}‚úó${NC} $file - MISSING"
        all_present=false
    fi
done

if [ "$all_present" = true ]; then
    echo
    echo -e "${GREEN}üéâ All gRPC files generated successfully!${NC}"
    echo -e "${GREEN}You can now start the server with: php src/server.php${NC}"
else
    echo
    echo -e "${RED}‚ùå Some files are missing. Check the protoc output above.${NC}"
    exit 1
fi